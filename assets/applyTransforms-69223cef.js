var x=Object.defineProperty;var n=(e,o)=>x(e,"name",{value:o,configurable:!0});import{t as r}from"./ts-morph-1b8b8780.js";import"./_commonjsHelpers-0119a68f.js";function d(){return new r.Project({useInMemoryFileSystem:!0,compilerOptions:{strict:!0,target:r.ts.ScriptTarget.ESNext,module:r.ts.ModuleKind.ESNext,moduleResolution:r.ts.ModuleResolutionKind.NodeNext,forceConsistentCasingInFileNames:!0,allowSyntheticDefaultImports:!0,esModuleInterop:!0,jsx:r.ts.JsxEmit.Preserve}})}n(d,"createProject");function g(e){return e.__replacePatterns}n(g,"getReplacePatterns");function S(e,o,c){c||(c=d());const f=typeof e=="string"?{"file.tsx":e}:e,i={};for(const t in f)i[t]=c.createSourceFile(t,f[t],{overwrite:!0});const l={};for(const t in i){const s=i[t];for(const u of o)u(s);const p=g(s)||{};s.formatText();let a=s.getText();for(const[u,m]of Object.entries(p))a=a.replaceAll(u,m);l[t]=a}return typeof e=="string"?Object.values(l)[0]:l}n(S,"applyTransforms");export{S as default};
